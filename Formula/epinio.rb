# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.11.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.11.0/epinio-darwin-arm64"
      sha256 "f55623563cf18c0973aa93045b5b4927ff53b3e8792000e262b5855b7dfdcd51"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.11.0/epinio-darwin-x86_64"
      sha256 "c2b9594051ae78eedc5b118f5d07a94d3cf22bcf5f000e620a90ac1f0cde138e"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.11.0/epinio-linux-arm64"
      sha256 "607baeb64a46eb00447fa5d6c8c8d3728cedf393e6a549397426f235b1385240"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.11.0/epinio-linux-x86_64"
      sha256 "78d9da519728b7ce0535fc398ce83a572da429f182a597757b9ea1a31043ccc9"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output
    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
