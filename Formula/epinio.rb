# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.6.1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/archive/refs/tags/v1.6.1.tar.gz"
      sha256 "8b07801efe93fc7eb8241dd05c57dd8ce1ed3568f88bfedf6340df996543cd2c"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.5.2/epinio-darwin-arm64"
      sha256 "499cf316b30f50d00d468b7ebf41a080d5cac79755990358590d34e74d5afa59"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.5.2/epinio-linux-x86_64"
      sha256 "3fda0c75668c97558bb89d6f3ecab4ee34f92986116270a919063a024c00e39d"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.5.2/epinio-linux-arm64"
      sha256 "3b3db966214c6e67ce9bdf1ede946dec2c84929dfbe936a32ef8629eeb2bdbc4"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output

    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
