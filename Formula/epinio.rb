# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "0.9.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v0.9.0/epinio-darwin-arm64"
      sha256 "26c6e0b5c2b55d9476865976e8eb0a269ebe1b9b272094e27d58e4863703bcfe"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v0.9.0/epinio-linux-arm64"
      sha256 "f524fad4537e6c1dcd64074f916c184619c849065e5b56f2e87187b6af9b033f"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v0.9.0/epinio-linux-x86_64"
      sha256 "3f4c399258c070e920faca4a2a29fa608bcfeea5b3ff0e2f46ec61ff3786e499"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output

    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
