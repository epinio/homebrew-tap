# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "0.8.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v0.8.0/epinio-darwin-arm64"
      sha256 "da9e2ab1d5e117a20b68dcb0aa1e2c62affba08dbebe451011e3cf5d1e6a4adb"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v0.8.0/epinio-linux-x86_64"
      sha256 "0b6e3dd97e8e5f4d911fa2336dab405174fd5a76f21f9b59201662d92bdfba33"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v0.8.0/epinio-linux-arm64"
      sha256 "96d6ce533ec9ad7990eb2bf78cdb9d249a66383f87b5e3a359464acc3b802581"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output

    output = shell_output("#{bin}/epinio settings update 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
