# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.7.1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.7.1/epinio-darwin-arm64"
      sha256 "37c5d502e3c8a531dc9c69f1476837a0551b135f960b1e463b81fb51320f51f9"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.7.1/epinio-darwin-x86_64"
      sha256 "e0f17864f397da4c427379992f088c5654a2053186982c25b41d290a3a9b66a8"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.7.1/epinio-linux-arm64"
      sha256 "fa7d21903a56a352889d497f3165ed27ba39c270cf9ac39380a344c28d0c11f8"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.7.1/epinio-linux-x86_64"
      sha256 "c4d714a35c440a36205c58d733b3c46fa553527fe314146108c53370c1967339"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output
    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
