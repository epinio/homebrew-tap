# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.13.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.13.0/epinio-darwin-arm64"
      sha256 "edb8f95cfd694b89350f1104a598fbf38463f1146515bc3c03289973471103f7"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.13.0/epinio-darwin-x86_64"
      sha256 "fbe6c35014b1f3dab21b81da13d2e89b48852059525688c14d31c6dd907ef1bc"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.13.0/epinio-linux-x86_64"
      sha256 "d1ef70edb84dbf3fc4fdbface7e3b4ec4db7f2bc9d0b983feab96f83dcf6bc1b"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.13.0/epinio-linux-arm64"
      sha256 "9feebd7107aa37a1b3e1825f4f344e73fa3103170cdfa1ddbefd3aa3ca9b7d8e"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output
    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
