# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.10.0-rc1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.10.0-rc1/epinio-darwin-arm64"
      sha256 "2f04ad7dcca2cdccfb377d9a3f9ffb0605c5c96d65e9bd676b15bac0996c174b"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.10.0-rc1/epinio-darwin-x86_64"
      sha256 "98a8486cf9af120f6e70fc56c85622ce610d8eb4919f2589e50f6309d88006f6"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.10.0-rc1/epinio-linux-x86_64"
      sha256 "830c36b1da7d466baf12e0d92412290cb4fe5bb2b0bff66307a3d176d5fea590"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.10.0-rc1/epinio-linux-arm64"
      sha256 "dbdb2a98844c0111fcd5387bbb2bb672874a0eb2009e121819ed65bc2bf04021"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output
    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
