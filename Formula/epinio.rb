# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "0.7.1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v0.7.1/epinio-darwin-x86_64"
      sha256 "65fb32065eb84c7569b7485a37db24b89b23e4d3ee1bae8348c498948e486853"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v0.7.1/epinio-darwin-arm64"
      sha256 "2f1619db0d7ba21c44a53b6b0d9487dbac267b12c829940e783a70845e55986d"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v0.7.1/epinio-linux-arm64"
      sha256 "1c91c0607111aab64f9a5216ed4c1abb17526908b7c4309ccd1c0e62a93143bc"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v0.7.1/epinio-linux-x86_64"
      sha256 "b70c40e314f9fba036325ca64927ff3fa3d51680ab9ac96b1739e89a0423abe2"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output

    output = shell_output("#{bin}/epinio settings update 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
