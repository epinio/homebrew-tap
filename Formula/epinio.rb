# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.8.1"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.8.1/epinio-darwin-x86_64"
      sha256 "dab19b31131b3ae0620daaf71f2203639fcff9c714f40bdfe31ae9a5fb8b4fb9"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.8.1/epinio-darwin-arm64"
      sha256 "181f52946edb5eb626c2696717989c372e96c15d555f116fed643359cf6d4b3d"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.8.1/epinio-linux-arm64"
      sha256 "6a616c956cc99d17ba6d460004ef01ecb3615dc8f51bf8db3247d412b057eea9"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.8.1/epinio-linux-x86_64"
      sha256 "cd15582361b10c6484245d9fd54cc0ffaef64de42fc6ab7a5afe341ece13eb13"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output
    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
