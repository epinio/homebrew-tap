# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.8.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.8.0/epinio-darwin-arm64"
      sha256 "c91a08f9495b1ac9efc3cd76d50e4f23984ee9e28ac59125a6975f5a6e02c72b"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.8.0/epinio-darwin-x86_64"
      sha256 "ee7eeefc571016600ab6e4c4948dd3214577c4c51439cede8d142a10cf2b3d98"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.8.0/epinio-linux-arm64"
      sha256 "90de8ea38f9555913cbba4bb9632676e00529f1d94fee90c595d7202afef0714"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.8.0/epinio-linux-x86_64"
      sha256 "32cd5e2440fc130bbef70286fc6d49c136c12580781080f0c9f3b0156416678e"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output
    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
