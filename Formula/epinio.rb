# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.0.0-rc2"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.0.0-rc2/epinio-darwin-arm64"
      sha256 "44c75792e4077d686c2f988c90c93d4bdc62d61dab1b977f04c20df95c4a1ea5"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.0.0-rc2/epinio-linux-x86_64"
      sha256 "9ba2b926ae7e04736e14d5d1ca73e08eecb0a939ef877ac50a1e4a5cd692da99"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.0.0-rc2/epinio-linux-arm64"
      sha256 "a833cb16ccea55919499f126a73b062694a5926d54545821c44e859efcdeafc3"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output

    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
