# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.5.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.5.0/epinio-darwin-x86_64"
      sha256 "60026ac564d3fd8e8ff3ab2f95f87baeea575603cde5b104d4eaf3a063afcbb0"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.5.0/epinio-darwin-arm64"
      sha256 "4fdeede75a2173a51b14586d0881c565acbec62a20db0e8b111ae09a2534b897"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.5.0/epinio-linux-x86_64"
      sha256 "1e4cb23343342b3570096fbe768a45dd66bb18f04f438d24a5696101ef5b99e7"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.5.0/epinio-linux-arm64"
      sha256 "965153db1c2c7948fbb81bba430ef2bdf704a42bc5543bc54845a02c849609cf"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output

    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
