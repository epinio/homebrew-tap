# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Epinio < Formula
  desc "CLI for Epinio, the Application Development Engine for Kubernetes"
  homepage "https://epinio.io/"
  version "1.12.0"
  license "Apache-2.0"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/epinio/epinio/releases/download/v1.12.0/epinio-darwin-arm64"
      sha256 "d1650ab6af2a690bc98660700d36230f6f19e411fdb66bc4df7dd8f24d09ee46"

      def install
        bin.install "epinio-darwin-arm64" => "epinio"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.12.0/epinio-darwin-x86_64"
      sha256 "57a19438225f4ce6cb4f2eb72f01c6610006bf96dce643f08cc8de79ef333490"

      def install
        bin.install "epinio-darwin-x86_64" => "epinio"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/epinio/epinio/releases/download/v1.12.0/epinio-linux-x86_64"
      sha256 "07b40af5491db7093035410d59492a5e7367a193439caadfc8a5ff81b6be33a9"

      def install
        bin.install "epinio-linux-x86_64" => "epinio"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/epinio/epinio/releases/download/v1.12.0/epinio-linux-arm64"
      sha256 "5d98f49aa12fc081c91b72dbee7e75f0b09e7d010fb4033028048735983acba1"

      def install
        bin.install "epinio-linux-arm64" => "epinio"
      end
    end
  end

  test do
    output = shell_output("#{bin}/epinio version 2>&1")
    assert_match "Epinio Version: #{version}", output
    output = shell_output("#{bin}/epinio settings update-ca 2>&1")
    assert_match "failed to get kube config", output
    assert_match "no configuration has been provided", output
  end
end
